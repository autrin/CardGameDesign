<diagram program="umletino" version="15.1"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>1690</x><y>1010</y><w>370</w><h>80</h></coordinates><panel_attributes>PlayerCountButton
--
- kSelectorBase: String
--
+ PlayerCountButton(label: String, count: int, location: Location)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1370</x><y>710</y><w>440</w><h>190</h></coordinates><panel_attributes>Button
--
- evtName: String
- label: String
- location: Location
--
+ Button(selector: String, evtName: String, label: String, location: Location)
+ getEvtName(): String
+ setEvtName(evtName: String)
+ getLabel(): String
+ setLabel(label: String):void
+ getLocation(): Location
+ setLocation(location: Location): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1480</x><y>560</y><w>220</w><h>130</h></coordinates><panel_attributes>PresentationObject
--
- remoteId: String
--
+ selector: String
+ PresentationObject()
+ PresentationObject(selector: String)
+ setRemoteId(remoteId: String):void
+ getRemoteId(): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>900</x><y>1010</y><w>370</w><h>80</h></coordinates><panel_attributes>SelectGameButton
--
- kSelectorBase: String
--
+ SelectGameButton(label: String, location: Location)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>390</x><y>670</y><w>340</w><h>210</h></coordinates><panel_attributes>SelectGameEvent
--
- selection: String
- quorum: Quorum
--
+ SelectGameEvent(gameID: String)
+ SelectGameEvent(selection: String, e: ConnectEvent)
+ getSelection(): String
+ dispatch(rules: RulesDispatch, table: Table,
              player: Player): Move
+ accept(handler: GameController, game: PregameSetup)
+ hasQuorum(): boolean
+ get Quorum(): Quorum
+ createEvent(sktEvent: SocketMessage): Event</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>600</y><w>310</w><h>320</h></coordinates><panel_attributes>GameController
--
- inQ: InBoundQueue
- remote: RemoteTableGateway
- abstractFactory: GameFactoryFactory
- deferred: Stack&lt;Event&gt;
- game: PregameSetup
--
+ GameController(inQ: InBoundQueue,
              gateway: RemoteTableGateway,
              gFFactory: GameFactoryFactory)
+ run()
+ apply(e: ConnectEvent,
              game: PregameSetup)
+ apply(e: SelectGameEvent,
              game: PregameSetup)
+ apply(e: InvalidGameSelectionEvent,
              game: PregameSetup)
+ apply(e: NewPartyEvent,
              game: PregameSetup)
+ apply(endPlay: EndPlayEvent,
              game2: PregameSetup)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>790</x><y>660</y><w>380</w><h>210</h></coordinates><panel_attributes>SetQuorumEvent
--
quorum: Quorum
--
+ SetQuorumEvent(min: String, max: String)
+ SetQuorumEvent(quorum: Quorum)
+ dispatch(rules: RulesDispatch, table Table,
              player: Player): Move
+ getQuorum(): Quorum
+ createEvent(sktEvent: SocketMessage): Event</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>870</x><y>150</y><w>360</w><h>200</h></coordinates><panel_attributes>P52Rules
--
+ DROP_PILE: String
+ PICKUP_PILE: String
+ P52Rules()
+ eval(nextE: Event, table: Table, player: Player): Move
+ apply(e: CardEvent, table: Table, player: Player): Move
+ apply(e: DealEvent, table: Table, player: Player): Move
+ apply(e: InitGameEvent, table: Table, player: Player): Move
+ apply(e: NewPartyEvent, table: Table, player: Player): Move
+ apply(e: SetQuorumEvent, table: Table, player: Player): Move
+ apply(e: ConnectEvent, table: Table, player: Player): Move
+ registerEvents()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1000</x><y>500</y><w>360</w><h>70</h></coordinates><panel_attributes>P52SPPickupRules
--
+ apply(e: InitGameEvent, table: Table, player: Player): Move
+ apply(e: SetQuorumEvent, table: Table, player: Player): Move</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>940</x><y>340</y><w>40</w><h>340</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;320;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1120</x><y>560</y><w>40</w><h>120</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;100;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1030</x><y>340</y><w>30</w><h>180</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;160</additional_attributes></element><element><id>Relation</id><coordinates><x>1670</x><y>970</y><w>70</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;50;40</additional_attributes></element><element><id>Relation</id><coordinates><x>1200</x><y>960</y><w>250</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-
</panel_attributes><additional_attributes>230;10;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>1570</x><y>680</y><w>40</w><h>50</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;20;30</additional_attributes></element><element><id>Relation</id><coordinates><x>300</x><y>790</y><w>110</w><h>40</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1350</x><y>250</y><w>500</w><h>230</h></coordinates><panel_attributes>ViewFacade
--
- factory: ViewFactory
- views: List&lt;View&gt;
- remoteIdLookup: Map&lt;String, String&gt;
- state: ScreenState
--
+ createView(role: PartyRole, pos: Integer, socketId, String,
              gw: RemoteTableGateway): View
+ getDefaultView(): View
+ send(cmd: Marshalls): void
+ add(view: View): void
+ register(item: PresentationObject): void
+ register(item: VariableButton): void
+ getRemoteId(selector: String): String
+ displayNextObjects(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1430</x><y>930</y><w>250</w><h>70</h></coordinates><panel_attributes>VariableButton
--
+ Button(selector: String, evtName: String,
              label: String, location: Location)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1550</x><y>890</y><w>50</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>30;10;10;40</additional_attributes></element><element><id>Relation</id><coordinates><x>1570</x><y>470</y><w>40</w><h>110</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1670</x><y>470</y><w>190</w><h>520</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;490;160;490;160;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>480</x><y>510</y><w>210</w><h>70</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
EventFactory
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>550</x><y>570</y><w>50</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>30;10;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>570</y><w>210</w><h>180</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;60;60;150;80;190;160</additional_attributes></element><element><id>UMLClass</id><coordinates><x>420</x><y>930</y><w>340</w><h>160</h></coordinates><panel_attributes>SocketMessage
--
- map: Map
- socketId: int
--
+ SocketMessage(message: String, socketHash: int)
+ SocketMessage(map: Map&lt;String, String&gt;, socketId, int)
+ getSocketId(): int
+ getName(): String
+ get(key: String): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>500</x><y>870</y><w>90</w><h>80</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;60;70;10</additional_attributes></element><element><id>Relation</id><coordinates><x>700</x><y>860</y><w>120</w><h>90</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;70;100;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1950</x><y>290</y><w>250</w><h>110</h></coordinates><panel_attributes>ScreenState
--
- remoteIDs: ArrayList&lt; ArrayList&lt;String&gt; &gt;
--
+ append(screen: ArrayList&lt;String&gt;)
+ hasMore(): boolean
+ currentObjects(): ArrayList&lt;String&gt;
+ nextObjects(): ArrayList&lt;String&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1840</x><y>330</y><w>130</w><h>40</h></coordinates><panel_attributes>lt=&lt;-&gt;&gt;&gt;&gt;&gt;
m1=1
m2=1</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1400</x><y>40</y><w>300</w><h>120</h></coordinates><panel_attributes>SetQuorumMove
--
- quorum: Quorum
--
+ SetQuorumMove(quorum: Quorum)
+ apply(table Table)
+ apply(view: ViewFacade)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1540</x><y>150</y><w>40</w><h>120</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;100;20;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1220</x><y>110</y><w>200</w><h>90</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>180;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>330</x><y>40</y><w>360</w><h>250</h></coordinates><panel_attributes>fg=red
WarRules
--
- P1_PILE: String
- P2_PILE: String
- p1: Player
- p2: Player
--
+ WarRules(player1: Player, player2: Player)
+ eval(nextE: Event, table: Table, player: Player): Move
+ apply(e: DealEvent, table: Table, player: Player): Move
+ apply(e: InitGameEvent, table: Table, player: Player): Move
+ apply(e: SetQuorumEvent, table: Table, player: Player): Move
+ registerEvents()
+ partiesReady(): boolean
+ addPile(pile Pile):
+getPlayers(): Collection&lt;Player&gt;
+ didSelectPile(p: Pile): boolean
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>110</x><y>370</y><w>450</w><h>80</h></coordinates><panel_attributes>WarEventRules
--
+ apply(e: InitGameEvent, table: Table, player1: Player, player2: Player): Move
+ apply(e: SetQuorumEvent, table: Table, player: Player): Move
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>570</x><y>280</y><w>370</w><h>400</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1
fg=red</panel_attributes><additional_attributes>340;380;340;100;110;100;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>550</x><y>420</y><w>320</w><h>260</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1
fg=red</panel_attributes><additional_attributes>300;240;290;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>20</x><y>100</y><w>210</w><h>100</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
Table
--
+ addPile(pile: PIle):
+ getPlayers(): Collection&lt;Player&gt;
+ partiesReady(): boolean
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>220</x><y>130</y><w>130</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;.
fg=red</panel_attributes><additional_attributes>10;10;110;10</additional_attributes></element><element><id>Relation</id><coordinates><x>340</x><y>280</y><w>40</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;-
fg=red
m1=1
m2=1</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>470</y><w>340</w><h>90</h></coordinates><panel_attributes>WarSelectionEvent
--
- selection: String
--
+ SelectEvent(selection: String)
+ getSelection(): String
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>330</x><y>530</y><w>170</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;.
fg=red</panel_attributes><additional_attributes>150;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>680</x><y>60</y><w>740</w><h>40</h></coordinates><panel_attributes>lt=&lt;-
fg=red
m1=1
m2=1</panel_attributes><additional_attributes>720;10;10;10</additional_attributes></element></diagram>