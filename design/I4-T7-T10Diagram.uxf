<diagram program="umletino" version="15.1"><zoom_level>7</zoom_level><help_text>Space for diagram notesLocation</help_text><element><id>UMLClass</id><coordinates><x>238</x><y>686</y><w>147</w><h>224</h></coordinates><panel_attributes>Card
--
+suits: String[]
-suit: String
-rank: int
-x: int
-y: int
-rotate: int
-faceUp: boolean
--
+getX(): int
+setX(x: int): void
+getY(): int
+setY(y: int): void
+getRotate(): int
+setRotate(rotate: int)
+isFaceUp(): boolean
+setFaceUp(faceUp: boolean): void
+getSuit(): String
+setSuit(suit: String): void
+getRank(): int
+setRank(rank: int): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>714</y><w>147</w><h>133</h></coordinates><panel_attributes>Pile
--
#cards: HashMap&lt;String,Card&gt;
-faceUp: boolean
-loc: Location
--
+getLocation(): Location
+moveTo(loc: Location): void
+getFaceUp(): boolean
+setFaceUp(faceUp:boolean): void
+addCard(c: Card): void
+getCard(id: String): Card
+getCards(): Collection&lt;Card&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>70</x><y>539</y><w>154</w><h>91</h></coordinates><panel_attributes>PresentationObject
--
- remoteId: String
--
+ selector: String
+ PresentationObject()
+ PresentationObject(selector: String)
+ setRemoteId(remoteId: String):void
+ getRemoteId(): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>35</x><y>581</y><w>49</w><h>147</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>50;10;10;10;10;190</additional_attributes></element><element><id>Relation</id><coordinates><x>189</x><y>623</y><w>133</w><h>77</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;50;170;50;170;90</additional_attributes></element><element><id>UMLClass</id><coordinates><x>434</x><y>770</y><w>140</w><h>49</h></coordinates><panel_attributes>DoNothingMove
--
+ apply(table:Table): void
+ apply(view: ViewFacade): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>448</x><y>546</y><w>133</w><h>63</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
Move
--
+apply(table:Table): void
+apply(veiws:ViewFacade): void
+isMatchEnd(): boolean
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>469</x><y>602</y><w>21</w><h>182</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;240</additional_attributes></element><element><id>UMLClass</id><coordinates><x>343</x><y>266</y><w>217</w><h>231</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
Table
--
+ addPile(pile: Pile): void
+ addPlayer(p: Player): void
+ getPile(string: String): Pile
+ removeFromPile(string: String, c: Card): void
+ addToPile(string: String, c: Card): void
+ addToScore(p: Player, i: int): int
+ isMatchOver(): boolean
+ setMatchOver(over: boolean): void
+ getRandom(): Random
+ getHost(): Party
+ partiesReady(): boolean
+ getCurrentPlayer(): Player
+ setQuorum(quorum Quorum): void
+ getQuorum(): Quorum
+ getPlayers(): Collection&lt;Player&gt;
+ getPlayerMap(): Map&lt;Integer, Player&gt;
+ createPlayer(pos: Integer, socketId: String): void
+ lookupPlayer(socketId: String): Player
+ getPlayer(pos: Integer): Player</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>623</x><y>49</y><w>140</w><h>63</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
Rules
--
+eval(Event, Table, Player): Move
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>63</x><y>322</y><w>196</w><h>175</h></coordinates><panel_attributes>ViewFacade
--
- factory: ViewFactory
- views: ArrayList&lt;View&gt; 
- remoteIdLookup : HashMap&lt;String, String&gt;
--
+ createView(role: PartyRole,
                            pos: Integer,
                            socketId: String, 
                            gw: RemoteTableGateway): View
+ getDefaultView(): View
+ send(cmd: Marshalls): void
+ add(view: View): void
+ register(item: PresentationObject): void
+ getRemoteId(selector: String): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>735</x><y>679</y><w>147</w><h>77</h></coordinates><panel_attributes>CreatePlayerMove
--
-position: Integer
- socketID: String
- player: Player
+apply(table: Table): void
+ apply(veiws: ViewFacade): void

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>574</x><y>567</y><w>259</w><h>126</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;350;10;350;160</additional_attributes></element><element><id>UMLClass</id><coordinates><x>448</x><y>868</y><w>112</w><h>84</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
Player
--
+addToScore(amount: int): int
+getPlayerNum(): int
+getSocketId(): String
+getScore(): int
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>553</x><y>749</y><w>343</w><h>217</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;280;460;280;460;10</additional_attributes></element><element><id>Relation</id><coordinates><x>553</x><y>357</y><w>308</w><h>336</h></coordinates><panel_attributes>lt=&lt;.
m1=1
m2=1</panel_attributes><additional_attributes>10;10;410;10;410;460</additional_attributes></element><element><id>Relation</id><coordinates><x>231</x><y>490</y><w>581</w><h>203</h></coordinates><panel_attributes>lt=&lt;.
m1=1
m2=1</panel_attributes><additional_attributes>10;10;10;50;800;50;800;270</additional_attributes></element><element><id>UMLClass</id><coordinates><x>686</x><y>154</y><w>287</w><h>161</h></coordinates><panel_attributes>fg=red
WarRules
--
- P1_PILE: String
- P2_PILE: String
--
+ eval(nextE: Event, table: Table, player: Player): Move
+ apply(e: CardEvent, table: Table, player: Player): Move
+ apply(e: DealEvent, table: Table, player: Player): Move
+ apply(e: InitGameEvent, table: Table, player: Player): Move
+ apply(e: NewPartyEvent, table: Table, player: Player): Move
+ apply(e: SetQuorumEvent, table: Table, player: Player): Move
+ apply(e: ConnectEvent, table: Table, player: Player): Move
+ apply(e: DetermineQuorumEvent, table: Table, player: Player): Move
+ registerEvents(): void
+ isTie(card1:Card, card2:Card): boolean
+improperCardSelection(e: Event, table: Table, player: Player):Move</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>721</x><y>105</y><w>21</w><h>63</h></coordinates><panel_attributes>lt=&lt;&lt;.
fg=red</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>49</x><y>168</y><w>287</w><h>133</h></coordinates><panel_attributes>RulesDispatchBase
--
+ apply(e: CardEvent, table: Table, player: Player): Move
+ apply(e: DealEvent, table: Table, player: Player): Move
+ apply(e: EndPlayEvent, table: Table, player: Player): Move
+ apply(e: InitGameEvent, table: Table, player: Player): Move
+ apply(e: SelectGameEvent, table: Table, player: Player): Move
+ apply(e: GameRestartEvent, table: Table, player: Player): Move
+ apply(e: NewPartyEvent, table: Table, player: Player): Move
+ apply(e: ConnectEvent, table: Table, player: Player): Move
+ apply(e: SetQuorumEvent, table: Table, player: Player): Move
+ apply(e: DetermineQuorumEvent, table: Table, player: Player): Move</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>63</x><y>0</y><w>287</w><h>140</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
RulesDispatch
--
+ apply(e: CardEvent, table: Table, player: Player): Move
+ apply(e: DealEvent, table: Table, player: Player): Move
+ apply(e: EndPlayEvent, table: Table, player: Player): Move
+ apply(e: InitGameEvent, table: Table, player: Player): Move
+ apply(e: SelectGameEvent, table: Table, player: Player): Move
+ apply(e: GameRestartEvent, table: Table, player: Player): Move
+ apply(e: NewPartyEvent, table: Table, player: Player): Move
+ apply(e: ConnectEvent, table: Table, player: Player): Move
+ apply(e: SetQuorumEvent, table: Table, player: Player): Move
+ apply(e: DetermineQuorumEvent, table: Table, player: Player): Move</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>189</x><y>133</y><w>21</w><h>49</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>329</x><y>238</y><w>371</w><h>21</h></coordinates><panel_attributes>lt=&lt;&lt;-
fg=red</panel_attributes><additional_attributes>10;10;510;10</additional_attributes></element><element><id>Relation</id><coordinates><x>343</x><y>14</y><w>469</w><h>154</h></coordinates><panel_attributes>lt=&lt;&lt;.
fg=red
</panel_attributes><additional_attributes>10;20;650;20;650;200</additional_attributes></element><element><id>UMLClass</id><coordinates><x>588</x><y>784</y><w>133</w><h>63</h></coordinates><panel_attributes>fg=red
WarMove
--
+apply(table:Table): void
+apply(veiws:ViewFacade): void
+isMatchEnd(): boolean
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>567</x><y>602</y><w>91</w><h>196</h></coordinates><panel_attributes>lt=&lt;&lt;.
fg=red</panel_attributes><additional_attributes>10;10;10;40;110;40;110;260</additional_attributes></element><element><id>Relation</id><coordinates><x>574</x><y>266</y><w>126</w><h>301</h></coordinates><panel_attributes>lt=&lt;-
m1=1..*
m2=1
fg=red</panel_attributes><additional_attributes>10;400;80;400;80;10;160;10</additional_attributes></element><element><id>Relation</id><coordinates><x>77</x><y>301</y><w>623</w><h>427</h></coordinates><panel_attributes>lt=&lt;-
fg=red
m1=1..*
m2=1</panel_attributes><additional_attributes>10;590;10;490;320;490;320;300;830;300;830;10;870;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>497</x><y>651</y><w>133</w><h>84</h></coordinates><panel_attributes>fg=red
WarCardMove
--
-c: Card
-p: Player
-fromPile: Pile
-toPile: Pile
--
+apply(table:Table): void
+apply(veiws:ViewFacade): void
+from</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>105</x><y>665</y><w>406</w><h>273</h></coordinates><panel_attributes>lt=&lt;-
fg=red
m2=1
m1=1..*</panel_attributes><additional_attributes>10;260;10;370;430;370;430;10;560;10</additional_attributes></element><element><id>Relation</id><coordinates><x>546</x><y>602</y><w>21</w><h>63</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>413</x><y>700</y><w>98</w><h>203</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1
fg=red</panel_attributes><additional_attributes>50;260;10;260;10;10;120;10</additional_attributes></element><element><id>Relation</id><coordinates><x>504</x><y>266</y><w>602</w><h>602</h></coordinates><panel_attributes>lt=&lt;-
fg=red
m1=0..1
m2=1</panel_attributes><additional_attributes>10;790;10;840;840;840;840;10;670;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>189</x><y>938</y><w>189</w><h>98</h></coordinates><panel_attributes>CardEvent
--
+kId: String
-id: String
-socketId: String
--
+ createEvent(sktMsg:SocketMessage): Event
+getId(): String
+dispatch(rules:RulesDispatch, table:Table,
														player:Player):Move</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>140</x><y>490</y><w>35</w><h>63</h></coordinates><panel_attributes>lt=&lt;.
m1=1
m2=1..*</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>140</x><y>777</y><w>112</w><h>35</h></coordinates><panel_attributes>lt=&lt;-

m1=1..*
m2=*</panel_attributes><additional_attributes>140;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>301</x><y>294</y><w>56</w><h>84</h></coordinates><panel_attributes>lt=&lt;.
m1=1..*
m2=1</panel_attributes><additional_attributes>60;90;10;90;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>273</x><y>294</y><w>189</w><h>308</h></coordinates><panel_attributes>lt=&lt;-

m1=1..*
m2=1</panel_attributes><additional_attributes>250;410;10;410;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>364</x><y>588</y><w>91</w><h>420</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>110;10;40;10;40;570;10;570</additional_attributes></element><element><id>Relation</id><coordinates><x>371</x><y>945</y><w>154</w><h>84</h></coordinates><panel_attributes>lt=&lt;.
m1=1
m2=1</panel_attributes><additional_attributes>190;10;190;90;10;90</additional_attributes></element><element><id>UMLClass</id><coordinates><x>735</x><y>770</y><w>133</w><h>77</h></coordinates><panel_attributes>fg=red
WarInitMove
--
-table:Table
-players: Map&lt;Integer, Player&gt;
-title: String
--
+apply(table:Table): void
+apply(veiws:ViewFacade): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>574</x><y>595</y><w>175</w><h>189</h></coordinates><panel_attributes>lt=&lt;&lt;.
fg=red</panel_attributes><additional_attributes>10;10;150;10;150;250;230;250</additional_attributes></element><element><id>Relation</id><coordinates><x>553</x><y>308</y><w>406</w><h>623</h></coordinates><panel_attributes>lt=&lt;.
m1=1..*
m2=1
fg=red</panel_attributes><additional_attributes>10;860;550;860;550;10</additional_attributes></element></diagram>