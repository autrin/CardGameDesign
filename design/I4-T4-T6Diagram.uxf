<diagram program="umletino" version="15.1"><zoom_level>8</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>1504</x><y>864</y><w>296</w><h>64</h></coordinates><panel_attributes>PlayerCountButton
--
- kSelectorBase: String
--
+ PlayerCountButton(label: String, count: int, location: Location)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1296</x><y>592</y><w>352</w><h>152</h></coordinates><panel_attributes>Button
--
- evtName: String
- label: String
- location: Location
--
+ Button(selector: String, evtName: String, label: String, location: Location)
+ getEvtName(): String
+ setEvtName(evtName: String)
+ getLabel(): String
+ setLabel(label: String):void
+ getLocation(): Location
+ setLocation(location: Location): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1392</x><y>456</y><w>176</w><h>104</h></coordinates><panel_attributes>PresentationObject
--
- remoteId: String
--
+ selector: String
+ PresentationObject()
+ PresentationObject(selector: String)
+ setRemoteId(remoteId: String):void
+ getRemoteId(): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1184</x><y>864</y><w>296</w><h>64</h></coordinates><panel_attributes>SelectGameButton
--
- kSelectorBase: String
--
+ SelectGameButton(label: String, location: Location)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>640</x><y>568</y><w>272</w><h>168</h></coordinates><panel_attributes>SelectGameEvent
--
- selection: String
- quorum: Quorum
--
+ SelectGameEvent(gameID: String)
+ SelectGameEvent(selection: String, e: ConnectEvent)
+ getSelection(): String
+ dispatch(rules: RulesDispatch, table: Table,
              player: Player): Move
+ accept(handler: GameController, game: PregameSetup)
+ hasQuorum(): boolean
+ get Quorum(): Quorum
+ createEvent(sktEvent: SocketMessage): Event</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>328</x><y>488</y><w>248</w><h>256</h></coordinates><panel_attributes>GameController
--
- inQ: InBoundQueue
- remote: RemoteTableGateway
- abstractFactory: GameFactoryFactory
- deferred: Stack&lt;Event&gt;
- game: PregameSetup
--
+ GameController(inQ: InBoundQueue,
              gateway: RemoteTableGateway,
              gFFactory: GameFactoryFactory)
+ run()
+ apply(e: ConnectEvent,
              game: PregameSetup)
+ apply(e: SelectGameEvent,
              game: PregameSetup)
+ apply(e: InvalidGameSelectionEvent,
              game: PregameSetup)
+ apply(e: NewPartyEvent,
              game: PregameSetup)
+ apply(endPlay: EndPlayEvent,
              game2: PregameSetup)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>936</x><y>568</y><w>304</w><h>168</h></coordinates><panel_attributes>SetQuorumEvent
--
quorum: Quorum
--
+ SetQuorumEvent(min: String, max: String)
+ SetQuorumEvent(quorum: Quorum)
+ dispatch(rules: RulesDispatch, table Table,
              player: Player): Move
+ getQuorum(): Quorum
+ createEvent(sktEvent: SocketMessage): Event</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>824</x><y>240</y><w>288</w><h>160</h></coordinates><panel_attributes>P52Rules
--
+ DROP_PILE: String
+ PICKUP_PILE: String
+ P52Rules()
+ eval(nextE: Event, table: Table, player: Player): Move
+ apply(e: CardEvent, table: Table, player: Player): Move
+ apply(e: DealEvent, table: Table, player: Player): Move
+ apply(e: InitGameEvent, table: Table, player: Player): Move
+ apply(e: NewPartyEvent, table: Table, player: Player): Move
+ apply(e: SetQuorumEvent, table: Table, player: Player): Move
+ apply(e: ConnectEvent, table: Table, player: Player): Move
+ registerEvents()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>992</x><y>448</y><w>288</w><h>56</h></coordinates><panel_attributes>P52SPPickupRules
--
+ apply(e: InitGameEvent, table: Table, player: Player): Move
+ apply(e: SetQuorumEvent, table: Table, player: Player): Move</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>944</x><y>392</y><w>32</w><h>192</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;220;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1088</x><y>496</y><w>32</w><h>88</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1016</x><y>392</y><w>24</w><h>72</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>1520</x><y>824</y><w>24</w><h>56</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>1424</x><y>824</y><w>24</w><h>56</h></coordinates><panel_attributes>lt=&lt;&lt;-
</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>1464</x><y>552</y><w>24</w><h>56</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>568</x><y>640</y><w>88</w><h>32</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1288</x><y>224</y><w>400</w><h>184</h></coordinates><panel_attributes>ViewFacade
--
- factory: ViewFactory
- views: List&lt;View&gt;
- remoteIdLookup: Map&lt;String, String&gt;
- state: ScreenState
--
+ createView(role: PartyRole, pos: Integer, socketId, String,
              gw: RemoteTableGateway): View
+ getDefaultView(): View
+ send(cmd: Marshalls): void
+ add(view: View): void
+ register(item: PresentationObject): void
+ register(item: VariableButton): void
+ getRemoteId(selector: String): String
+ displayNextObjects(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1384</x><y>776</y><w>200</w><h>56</h></coordinates><panel_attributes>VariableButton
--
+ Button(selector: String, evtName: String,
              label: String, location: Location)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1456</x><y>736</y><w>24</w><h>56</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>1464</x><y>400</y><w>32</w><h>72</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1576</x><y>400</y><w>120</w><h>424</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;500;120;500;120;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>768</x><y>456</y><w>168</w><h>56</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
EventFactory
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>840</x><y>504</y><w>24</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>864</x><y>504</y><w>160</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;60;180;60;180;80</additional_attributes></element><element><id>UMLClass</id><coordinates><x>712</x><y>808</y><w>272</w><h>128</h></coordinates><panel_attributes>SocketMessage
--
- map: Map
- socketId: int
--
+ SocketMessage(message: String, socketHash: int)
+ SocketMessage(map: Map&lt;String, String&gt;, socketId, int)
+ getSocketId(): int
+ getName(): String
+ get(key: String): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>776</x><y>728</y><w>32</w><h>96</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;100;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>936</x><y>728</y><w>32</w><h>96</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;100;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1752</x><y>256</y><w>200</w><h>88</h></coordinates><panel_attributes>ScreenState
--
- remoteIDs: ArrayList&lt; ArrayList&lt;String&gt; &gt;
--
+ append(screen: ArrayList&lt;String&gt;)
+ hasMore(): boolean
+ currentObjects(): ArrayList&lt;String&gt;
+ nextObjects(): ArrayList&lt;String&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1680</x><y>288</y><w>88</w><h>32</h></coordinates><panel_attributes>lt=&lt;-&gt;&gt;&gt;&gt;&gt;
m1=1
m2=1</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1320</x><y>96</y><w>240</w><h>96</h></coordinates><panel_attributes>SetQuorumMove
--
- quorum: Quorum
--
+ SetQuorumMove(quorum: Quorum)
+ apply(table Table)
+ apply(view: ViewFacade)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1440</x><y>184</y><w>32</w><h>56</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>10;50;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1104</x><y>152</y><w>232</w><h>136</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes><additional_attributes>270;10;190;10;190;140;10;140</additional_attributes></element><element><id>UMLClass</id><coordinates><x>440</x><y>176</y><w>288</w><h>200</h></coordinates><panel_attributes>fg=red
WarRules
--
- P1_PILE: String
- P2_PILE: String
- p1: Player
- p2: Player
--
+ WarRules(player1: Player, player2: Player)
+ eval(nextE: Event, table: Table, player: Player): Move
+ apply(e: DealEvent, table: Table, player: Player): Move
+ apply(e: InitGameEvent, table: Table, player: Player): Move
+ apply(e: SetQuorumEvent, table: Table, player: Player): Move
+ registerEvents()
+ partiesReady(): boolean
+ addPile(pile Pile):
+getPlayers(): Collection&lt;Player&gt;
+ didSelectPile(p: Pile): boolean
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>720</x><y>104</y><w>616</w><h>136</h></coordinates><panel_attributes>lt=&lt;-
fg=red
m1=1
m2=1</panel_attributes><additional_attributes>750;10;190;10;190;140;10;140</additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>384</y><w>360</w><h>64</h></coordinates><panel_attributes>WarEventRules
--
+ apply(e: InitGameEvent, table: Table, player1: Player, player2: Player): Move
+ apply(e: SetQuorumEvent, table: Table, player: Player): Move
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>632</x><y>368</y><w>360</w><h>216</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1
fg=red</panel_attributes><additional_attributes>420;250;420;90;10;90;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>352</x><y>408</y><w>656</w><h>176</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1
fg=red</panel_attributes><additional_attributes>790;200;790;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>72</x><y>224</y><w>168</w><h>80</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
Table
--
+ addPile(pile: PIle):
+ getPlayers(): Collection&lt;Player&gt;
+ partiesReady(): boolean
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>232</x><y>248</y><w>224</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
fg=red</panel_attributes><additional_attributes>10;10;260;10</additional_attributes></element><element><id>Relation</id><coordinates><x>328</x><y>328</y><w>128</w><h>72</h></coordinates><panel_attributes>lt=&lt;&lt;-
fg=red
m1=1
m2=1</panel_attributes><additional_attributes>140;10;10;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>576</y><w>272</w><h>72</h></coordinates><panel_attributes>WarSelectionEvent
--
- selection: String
--
+ SelectEvent(selection: String)
+ getSelection(): String
fg=red</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>104</x><y>464</y><w>680</w><h>128</h></coordinates><panel_attributes>lt=&lt;&lt;.
fg=red</panel_attributes><additional_attributes>830;10;10;10;10;140</additional_attributes></element></diagram>